version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/00-init-mongo.js:ro
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  order-service:
    build: ./order-service
    container_name: order-service
    environment:
      NODE_ENV: production
      SERVICE_NAME: order-service
      PORT: 3001
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      MONGO_URL: mongodb://mongodb:27017/orders
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3001/health >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    environment:
      NODE_ENV: production
      SERVICE_NAME: inventory-service
      PORT: 3002
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      MONGO_URL: mongodb://mongodb:27017/inventory
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "3002:3002"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3002/health >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    container_name: notification-service
    environment:
      NODE_ENV: production
      SERVICE_NAME: notification-service
      PORT: 3003
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      MONGO_URL: mongodb://mongodb:27017/notifications
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "3003:3003"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3003/health >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

volumes:
  rabbitmq-data:
  mongo-data:
